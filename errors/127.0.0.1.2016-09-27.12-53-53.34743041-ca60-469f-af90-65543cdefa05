(dp1
S'output'
p2
S"<class 'gluon.contrib.pymysql.err.InternalError'> (1071, u'Specified key was too long; max key length is 767 bytes')"
p3
sS'layer'
p4
S'/home/mtk/Dropbox/diff/newsite/web2py/applications/difflet/models/db1.py'
p5
sS'code'
p6
S"# -*- coding: utf-8 -*-\n\n#db.define_table('student', Field('name') )\ndb.define_table('category'\n                ,Field('name', length=255, required=True, unique=True, comment='higher level category names')\n                ,auth.signature)\n\ndb.category.name.represent = lambda name, row : name.capitalize()\n\n\ndb.define_table('thing'\n                ,Field('category', 'reference category')\n                ,Field('name', required=True, unique=True, comment='name of thing/entity')\n                ,auth.signature)\n\ndb.thing.name.represent = lambda name, row : name.capitalize()\n\n\ndb.define_table('key'\n                ,Field('property', required=True, unique=True, comment='key-name e.g. capital, currency') \n                ,auth.signature)\n\n\ndb.define_table('value'\n                ,Field('data', required=True, unique=True, comment='data for corresponding key')\n                ,auth.signature)\n\n\ndb.define_table('listings'\n                ,Field('thing', 'reference thing')\n                ,Field('key', 'reference key')\n                ,Field('value', 'reference value')\n                ,auth.signature)\n\n\n# stores recent difflets for past 10 days\n# or minimum of 10\ndb.define_table('recents'\n                ,Field('thing1', 'reference thing')\n                ,Field('thing2', 'reference thing')\n                ,Field('last_accessed', 'datetime', default=request.now)\n                ,auth.signature)\n\n\n# stores difflets with hitcount > 10\n# to be checked every day once\ndb.define_table('popular'\n                ,Field('thing1', 'reference thing')\n                ,Field('thing2', 'reference thing')\n                ,Field('hits', 'integer', default=1)\n                ,Field('last_accessed', 'datetime', default=request.now)\n                ,auth.signature)\n'''\n'''\n\n\n\n\n\n\nk\n"
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/mtk/Dropbox/diff/newsite/web2py/applications/difflet/models/db1.py", line 14, in <module>\n    ,auth.signature)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/base.py", line 834, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/base.py", line 873, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/adapters/base.py", line 482, in create_table\n    self.create_sequence_and_triggers(query, table)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1369, in create_sequence_and_triggers\n    self.execute(query)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/contrib/pymysql/cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "/home/mtk/Dropbox/diff/newsite/web2py/gluon/contrib/pymysql/connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nInternalError: (1071, u\'Specified key was too long; max key length is 767 bytes\')\n'
p11
s.